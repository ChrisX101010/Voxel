import "imported.vxl" as imported;
import "another.vxl" as another;

var complexExpression = -5 + 12 * (-3 + 2) * -(5 - 4);
var thisIsAwesome = true;

function print(value) {
    syscall log(value);
}

function println(value) {
    syscall log(value);
    syscall log("\n");
}

function newList() {
    return syscall L();
}

function pushOntoList(list, value) {
    return syscall Lu(value, list);
}

function popFromList(list) {
    return syscall Lp(list);
}

function printList(list) {
    print("[");
    print(syscall Lj(list, ", "));
    println("]");
}

function newObject() {
    return syscall O();
}

function getObjectItem(object, key) {
    return syscall Og(object, key);
}

function setObjectItem(object, key, value) {
    return syscall Os(value, object, key);
}

function removeObjectItem(object, key) {
    return syscall Or(object, key);
}

function getObjectLength(object) {
    return syscall Ol(object);
}

println("This message was from a .vxl file!");
println("This time, it was compiled to a .vxc file and loaded by the runtime!");

if (thisIsAwesome) {
    println("This is awesome!");
} else {
    println("This is not awesome!");
}

var count = 10;

while (count > 0) {
    print("Countdown: ");
    println(count);

    count = count - 1;
}

function hello() {
    println("Hello from another function!");
}

function test(value, otherValue) {
    print("This is called from a function with arguments passed: ");
    print(value);
    print(" and ");
    println(otherValue);

    hello();

    return otherValue + 1;
}

print("Here is the result of a complex expression: ");
println(complexExpression);

var returned = test("I am a passed-in value!", 2 + 3);

print("Returned value: ");
println(returned);

var i = 1;

while (i <= 15) {
    if (i % 3 == 0 && i % 5 == 0) {
        println("Fizzbuzz!");
    } else if (i % 3 == 0) {
        println("Fizz!");
    } else if (i % 5 == 0) {
        println("Buzz!");
    } else {
        println(i);
    }

    i = i + 1;
}

var someList = [5, 7, 9];

function getSomeList() {
    return someList;
}

var list = ["a", "b", "c"];

println("Created new list:");
printList(list);

print("Pushing item; new length is: ");
print(pushOntoList(list, "d"));
println("");

printList(list);

print("Getting item 2: ");
print(list[2]);
println("");

print("Popping item: ");
print(popFromList(list));
println("");

print("Popping item again: ");
print(popFromList(list));
println("");

println("Remaining list:");
printList(list);

print("Some list: ");
printList(getSomeList());

getSomeList()[1] = 8;

print("Some list again: ");
printList(getSomeList());

print("List length: ");
println(list.length);

print("Some list length: ");
println(getSomeList().length);

var object = newObject();

print("Created new object: ");
println(object);

print("Getting object length: ");
println(getObjectLength(object));

setObjectItem(object, "test", "hello");
setObjectItem(object, "number", 123);
setObjectItem(object, "isWorking", true);

print("Set some values: ");
println(object);

print("Getting number: ");
println(getObjectItem(object, "number"));

print("Getting item not in object: ");
println(getObjectItem(object, "nothing"));

print("Getting object length: ");
println(getObjectLength(object));

setObjectItem(object, "number", 456);

print("Setting number: ");
println(object);

removeObjectItem(object, "number");

print("Getting object length: ");
println(getObjectLength(object));

print("Removing number: ");
println(object);