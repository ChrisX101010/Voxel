var thisStack = [];
var nextThis = null;

function getProperty(thing, property) {
    nextThis = thing;

    if (syscall T(thing) == "L") {
        if (#usedprop(length) && property == #prop(length)) {
            return syscall Ll(thing);
        }

        if (#usedprop(push) && property == #prop(push)) {
            return function(value) {
                syscall Lu(value, thing);
            };
        }

        if (#usedprop(pop) && property == #prop(pop)) {
            return function() {
                return syscall Lp(thing);
            };
        }
    }

    if (syscall T(thing) == "O") {
        var getter = syscall Ogg(thing, property);

        if (getter) {
            return getter();
        }

        var value = syscall Og(thing, property);

        if (#usedprop(length) && property == #prop(length) && value == null) {
            return syscall Ol(thing);
        }

        return value;
    }

    return null;
}

function setProperty(thing, property, value) {
    if (syscall T(thing) == "O") {
        var setter = syscall Ogs(thing, property);

        if (setter) {
            setter(value);

            return value;
        }
    }

    return syscall Ts(value, thing, property);
}

function pushThis() {
    syscall Lu(nextThis, thisStack);
}

function popThis() {
    nextThis = syscall Lp(thisStack);
}

function getThis() {
    return nextThis;
}